What Youâ€™ve Learned So Far:
If an identifier is declared in global scope, it's available everywhere.
If an identifier is declared in function scope, it's available in the function it 
was declared in (even in functions declared inside the function).
If an identifier is declared in block scope with var, it is available in the block and 
in the outer scope of the block it was declared in.
If an identifier is declared in block scope with let or const, it is only available 
in the block it was declared in.
When trying to access an identifier, the JavaScript Engine will first look in the current function. 
If it doesn't find anything, it will continue to the next outer function to see if it can find the 
identifier there. It will keep doing this until it reaches the global scope.
Global identifiers are a bad idea. They can lead to bad variable names, conflicting 
variable names, and messy code.